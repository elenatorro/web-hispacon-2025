---
// @ts-ignore
import { Icon } from "astro-icon/components";

interface ScheduleEvent {
  time: string;
  title: string;
  description?: string;
  speaker?: string;
  location: string;
  type: "talk" | "workshop" | "panel" | "break" | "special";
}

interface ScheduleDay {
  date: string;
  dayName: string;
  events: ScheduleEvent[];
}

const scheduleData: ScheduleDay[] = [
  {
    date: "19 Septiembre",
    dayName: "Viernes",
    events: [
      {
        time: "16:00",
        title: "Inauguración oficial",
        description: "Bienvenida a la HispaCón 2025",
        location: "Sala Principal",
        type: "special"
      },
      {
        time: "16:30",
        title: "Mesa redonda: El futuro de la ciencia ficción española",
        speaker: "Varios autores",
        location: "Sala Principal",
        type: "panel"
      },
      {
        time: "17:30",
        title: "Pausa café",
        location: "Hall",
        type: "break"
      },
      {
        time: "18:00",
        title: "Taller de escritura creativa",
        speaker: "Por confirmar",
        location: "Sala Taller",
        type: "workshop"
      },
      {
        time: "19:00",
        title: "Presentaciones editoriales",
        location: "Sala Editorial",
        type: "talk"
      },
      {
        time: "20:00",
        title: "Actividades lúdicas",
        location: "Sala Lúdica",
        type: "special"
      }
    ]
  },
  {
    date: "20 Septiembre",
    dayName: "Sábado",
    events: [
      {
        time: "11:00",
        title: "Apertura día 2",
        location: "Sala Principal",
        type: "special"
      },
      {
        time: "11:30",
        title: "Conferencia magistral",
        speaker: "Por confirmar",
        location: "Sala Principal",
        type: "talk"
      },
      {
        time: "12:30",
        title: "Presentaciones de proyectos",
        location: "Sala Editorial",
        type: "talk"
      },
      {
        time: "14:00",
        title: "Pausa comida",
        location: "Hall",
        type: "break"
      },
      {
        time: "16:00",
        title: "Mesa redonda: Terror contemporáneo",
        speaker: "Varios autores",
        location: "Sala Principal",
        type: "panel"
      },
      {
        time: "17:00",
        title: "Taller de ilustración fantástica",
        speaker: "Por confirmar",
        location: "Sala Taller",
        type: "workshop"
      },
      {
        time: "18:00",
        title: "Feria editorial abierta",
        location: "Hall Principal",
        type: "special"
      },
      {
        time: "19:00",
        title: "Gala Premios Ignotus",
        description: "Entrega de los prestigiosos premios de género",
        location: "Sala Principal",
        type: "special"
      }
    ]
  },
  {
    date: "21 Septiembre",
    dayName: "Domingo",
    events: [
      {
        time: "11:00",
        title: "Apertura día final",
        location: "Sala Principal",
        type: "special"
      },
      {
        time: "11:30",
        title: "Charlas cortas: Nuevas voces",
        speaker: "Autores emergentes",
        location: "Sala Principal",
        type: "talk"
      },
      {
        time: "12:30",
        title: "Última sesión de la feria",
        location: "Hall Principal",
        type: "special"
      },
      {
        time: "13:30",
        title: "Clausura y despedida",
        description: "Cierre oficial de la HispaCón 2025",
        location: "Sala Principal",
        type: "special"
      }
    ]
  }
];

const getEventTypeStyle = (type: string) => {
  switch (type) {
    case "talk":
      return "bg-blue-100 text-blue-800 border-blue-200";
    case "workshop":
      return "bg-green-100 text-green-800 border-green-200";
    case "panel":
      return "bg-purple-100 text-purple-800 border-purple-200";
    case "break":
      return "bg-gray-100 text-gray-600 border-gray-200";
    case "special":
      return "bg-yellow-100 text-yellow-800 border-yellow-200";
    default:
      return "bg-gray-100 text-gray-600 border-gray-200";
  }
};

const getEventIcon = (type: string) => {
  switch (type) {
    case "talk":
      return "bx:bxs-microphone";
    case "workshop":
      return "bx:bxs-wrench";
    case "panel":
      return "bx:bxs-group";
    case "break":
      return "bx:bxs-coffee";
    case "special":
      return "bx:bxs-star";
    default:
      return "bx:bxs-calendar";
  }
};

export interface Props {
  layout?: "vertical" | "horizontal";
  showDescription?: boolean;
}

const { layout = "vertical", showDescription = true } = Astro.props;
---

<div class="w-full">
  <!-- Tab Navigation -->
  <div class="border-b border-gray-200 mb-8">
    <nav class="-mb-px flex space-x-8 justify-center" aria-label="Tabs">
      {scheduleData.map((day, index) => (
        <button
          class={`schedule-tab py-2 px-4 border-b-2 font-medium text-sm transition-colors ${
            index === 0 
              ? 'border-indigo-500 text-indigo-600' 
              : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
          }`}
          data-tab={index}
          type="button"
        >
          <div class="text-center">
            <div class="font-bold">{day.dayName}</div>
            <div class="text-xs">{day.date}</div>
          </div>
        </button>
      ))}
    </nav>
  </div>

  <!-- Tab Content -->
  {scheduleData.map((day, dayIndex) => (
    <div
      class={`schedule-content ${dayIndex === 0 ? 'block' : 'hidden'}`}
      data-content={dayIndex}
    >
      <div class="mb-6">
        <h3 class="text-2xl font-bold text-gray-900 mb-2">
          {day.dayName}, {day.date}
        </h3>
        <p class="text-gray-600">
          {day.events.length} eventos programados
        </p>
      </div>

      {layout === "vertical" ? (
        <!-- Vertical Layout -->
        <div class="space-y-6">
          {day.events.map((event) => (
            <div class="flex gap-4 group">
              <!-- Time Column -->
              <div class="flex-shrink-0 w-20">
                <div class="text-sm font-medium text-gray-900">
                  {event.time}
                </div>
              </div>
              
              <!-- Event Card -->
              <div class="flex-1">
                <div class={`rounded-lg border-2 p-4 transition-all duration-200 group-hover:shadow-md ${getEventTypeStyle(event.type)}`}>
                  <div class="flex items-start gap-3">
                    <div class="flex-shrink-0 mt-1">
                      <Icon 
                        class="w-5 h-5" 
                        name={getEventIcon(event.type)} 
                      />
                    </div>
                    <div class="flex-1 min-w-0">
                      <h4 class="text-lg font-semibold mb-1">
                        {event.title}
                      </h4>
                      {event.speaker && (
                        <p class="text-sm font-medium mb-1">
                          <Icon class="inline w-4 h-4 mr-1" name="bx:bxs-user" />
                          {event.speaker}
                        </p>
                      )}
                      {showDescription && event.description && (
                        <p class="text-sm mb-2 opacity-90">
                          {event.description}
                        </p>
                      )}
                      <div class="flex items-center text-sm">
                        <Icon class="w-4 h-4 mr-1" name="bx:bxs-map" />
                        {event.location}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <!-- Horizontal Layout -->
        <div class="overflow-x-auto">
          <div class="min-w-full">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {day.events.map((event) => (
                <div class={`rounded-lg border-2 p-4 transition-all duration-200 hover:shadow-md ${getEventTypeStyle(event.type)}`}>
                  <div class="flex items-center gap-2 mb-2">
                    <Icon 
                      class="w-5 h-5" 
                      name={getEventIcon(event.type)} 
                    />
                    <span class="text-sm font-bold">
                      {event.time}
                    </span>
                  </div>
                  <h4 class="font-semibold mb-2 text-sm">
                    {event.title}
                  </h4>
                  {event.speaker && (
                    <p class="text-xs mb-1 opacity-90">
                      <Icon class="inline w-3 h-3 mr-1" name="bx:bxs-user" />
                      {event.speaker}
                    </p>
                  )}
                  {showDescription && event.description && (
                    <p class="text-xs mb-2 opacity-80">
                      {event.description}
                    </p>
                  )}
                  <div class="flex items-center text-xs">
                    <Icon class="w-3 h-3 mr-1" name="bx:bxs-map" />
                    {event.location}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  ))}

  <!-- Legend -->
  <div class="mt-8 pt-6 border-t border-gray-200">
    <h4 class="text-sm font-medium text-gray-900 mb-3">Tipos de eventos:</h4>
    <div class="flex flex-wrap gap-3 text-xs">
      <div class="flex items-center gap-1">
        <Icon class="w-4 h-4 text-blue-600" name="bx:bxs-microphone" />
        <span>Conferencias</span>
      </div>
      <div class="flex items-center gap-1">
        <Icon class="w-4 h-4 text-green-600" name="bx:bxs-wrench" />
        <span>Talleres</span>
      </div>
      <div class="flex items-center gap-1">
        <Icon class="w-4 h-4 text-purple-600" name="bx:bxs-group" />
        <span>Mesas redondas</span>
      </div>
      <div class="flex items-center gap-1">
        <Icon class="w-4 h-4 text-gray-600" name="bx:bxs-coffee" />
        <span>Pausas</span>
      </div>
      <div class="flex items-center gap-1">
        <Icon class="w-4 h-4 text-yellow-600" name="bx:bxs-star" />
        <span>Eventos especiales</span>
      </div>
    </div>
  </div>
</div>

<script>
  // Tab functionality
  document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.schedule-tab');
    const contents = document.querySelectorAll('.schedule-content');
    
    tabs.forEach((tab, index) => {
      tab.addEventListener('click', function() {
        // Remove active classes from all tabs
        tabs.forEach(t => {
          t.classList.remove('border-indigo-500', 'text-indigo-600');
          t.classList.add('border-transparent', 'text-gray-500');
        });
        
        // Add active classes to clicked tab
        tab.classList.remove('border-transparent', 'text-gray-500');
        tab.classList.add('border-indigo-500', 'text-indigo-600');
        
        // Hide all content
        contents.forEach(content => {
          content.classList.add('hidden');
          content.classList.remove('block');
        });
        
        // Show corresponding content
        const targetContent = document.querySelector(`[data-content="${index}"]`);
        if (targetContent) {
          targetContent.classList.remove('hidden');
          targetContent.classList.add('block');
        }
      });
    });
  });
</script>

<style>
  .schedule-tab {
    transition: all 0.2s ease-in-out;
  }
  
  .schedule-tab:hover {
    transform: translateY(-1px);
  }
  
  .schedule-content {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>
